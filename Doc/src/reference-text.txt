
[section#Text FParsec.Text]

[interface-reference]
[section Interface]
[$$interface]
[/section]

[section Members]
[interface-members]
[``
// FParsecCS.dll

namespace FParsec

type Text =
``]

[``
    static member @CountTextElements@: string -> int
``]
[
`FParsec.Text.CountTextElements(str)` is a faster implementation of `System.Globalization.StringInfo(str).LengthInTextElements`.
]


[``
    static member @FoldCase@: char -> char
``]
[#FoldCase_char
`FParsec.Text.FoldCase(chr)` is an optimized implementation of `FParsec.Text.FoldCase(string chr)`.
]

[``
    static member @FoldCase@: string -> string
``]
[
Returns a case-folded copy of the string argument. All chars are mapped using
the (non-Turkic) 1-to-1 [url  "http://www.unicode.org/Public/8.0.0/ucd/CaseFolding.txt" case folding mappings] (v. 8.0.0) for Unicode code points in the Basic Multilingual Plane, i.e. code points below 0x10000. If the case-folded string equals the argument string, the original argument is returned (to preserve its reference identity). If the argument is `null`, `null` is returned.
]

[``
    static member @IsWhitespace@: char -> bool
``]
[
`FParsec.Text.IsWhitespace(chr)` is a faster implementation of `System.Char.IsWhiteSpace(chr)`.

In the `LOW_TRUST`-version of FParsec this method simply forwards all calls to `System.Char.IsWhiteSpace(chr)`.
]

[``
    static member @NormalizeNewlines@: string -> string
``]
[
Returns the passed string with all occurrences of `"\r\n"` and `"\r"` replaced by `"\n"`. If the normalized string equals the argument string, the original argument is returned (to preserve its reference identity). If the argument is `null`, `null` is returned.
]

[``

``]
[/interface-members]
[/section]

[/interface-reference]
[/section]

